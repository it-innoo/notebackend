{"version":3,"sources":["components/Notification.js","components/Footer.js","services/notes.js","components/Note.js","App.js","index.js"],"names":["Notification","_ref","message","react_default","a","createElement","className","Footer","style","color","fontStyle","fontSize","services_notes","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","note","toggleImportance","label","onClick","App","props","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7635de59.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/notes'\n// const baseUrl = 'https://still-hamlet-40053.herokuapp.com/notes'\n// const baseUrl = 'http://localhost:3001/notes'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}